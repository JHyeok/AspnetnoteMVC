@model ReflectionIT.Mvc.Paging.PagingList<AspnetNote.MVC6.Models.Notes>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflactionIT.Mvc.Paging

<table class="table table-bordered">
    <thead>
        <tr>
            <th>번호</th>
            <th>제목</th>
            <th>작성자</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var note in Model)
        {
            <tr>
                <td>@note.NoteNo</td>
                <td>
                    @*http://www.example.com/Note/Detail?noteNo=1*@
                    <a asp-controller="Note" asp-action="Detail" asp-route-NoteNo="@note.NoteNo">@note.NoteTitle</a>
                </td>
                <td>@note.User.UserName</td>
            </tr>
        }
    </tbody>
</table>
<form method="get" class="form-inline text-center">
    <select class="selectpicker" id="searchType" name="searchType">
        <option value="NoteAll">전체</option>
        <option value="NoteTitle">제목</option>
        <option value="UserName">작성자</option>
        <option value="NoteContents">내용</option>
    </select>
    <input name="search" class="form-control" placeholder="검색" value="@Model.RouteValue["Filter"]" />
    <button type="submit" class="btn btn-info">
        <span class="glyphicon glyphicon-search" aria-hidden="true"></span> 검색
    </button>
</form>
<nav class="text-center">
    @await this.Component.InvokeAsync("Pager", new { PagingList = this.Model })
</nav>
<nav class="text-center">
    <vc:pager paging-list="@Model" />
</nav>
<div class="text-right">
    <a class="btn btn-default" asp-controller="Note" asp-action="Add">게시물 작성</a>
</div>
